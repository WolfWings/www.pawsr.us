UUID's are perhaps not the most accurate term, but it's the one
I've adopted in this codebase. They are closer to cryptographic
nonces, and are generated as such, but are opaque base64 blocks
to identify individual operations that require server-side data
to be stored between web-requests, to avoid stalling the client
when waiting for remote data such as third-party API calls, and
internal database lookups/writes.

Session State:

userid: <authenticated internal id>
<service>_uuid: Internal uuid used for tracking state of logins

Note that the client-side-AEAD cookie uses a modified JSON mode
that expands numbers to fixed-width 15-digit strings plus their
sign character, to harden against padding attacks caused by any
differences in digits per number. Strings get an extr character
in front which is stripped out. Other object types are normal &
unmodified JSON encoding.



Previous description of the URL structure is removed pending my
re-write to document things post-code-coverage testing to clean
up the code heavily.
