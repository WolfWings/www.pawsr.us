UUID's are perhaps not the most accurate term, but it's the one
I've adopted in this codebase. They are closer to cryptographic
nonces, and are generated as such, but are opaque base64 blocks
to identify individual operations that require server-side data
to be stored between web-requests, to avoid stalling the client
when waiting for remote data such as third-party API calls, and
internal database lookups/writes.

Session State:

userid: <authenticated internal id>
<service>_uuid: Internal uuid used for tracking state of logins

Note that the client-side-AEAD cookie uses a modified JSON mode
that expands numbers to fixed-width 15-digit strings plus their
sign character, to harden against padding attacks caused by any
differences in digits per number. Strings get an extr character
in front which is stripped out. Other object types are normal &
unmodified JSON encoding.



Global URL structure:

/
	Generic homepage

/login
	Lists all services
	Handle 'login_${service}_${uuid}' token if it exists
		This means showing WIP/Error status on icon
		If 'ready' it sets/updates the 'userid' session
		state, I.E. the server-side login state/user.

/profile
	TODO: Handle creating/managing public contact URLs



URL sequence for OAuth 1.0a-based services, I.E. Twitter:

Initial URL link on /login for service:
	/initlogin/${service}

Callback URL for service:
	/login/${service}

/initlogin/${service}
	Performs 'request_token' step
	Generates ${uuid} for tracking
	Sets ${service}_uuid session token to ${uuid}
	Creates ${service}_uuid_${uuid} server-side token
	Redirects (via 307) immediately to /preauth/${service}

/preauth/${service}
	Monitors ${service}_uuid_${uuid}
	Provides interstitial webpage for client
	When 'request_token' is complete, triggers the redirect
	to the true 'login' URL for ${service}

/login/${service}
	Performs 'access_token' step
	Verifies session state and returned OAuth data match
	Setup 'login_${service}_${uuid}' server-side token
	Deletes unrequired session state
	Redirects (via 307) immediately to /login
